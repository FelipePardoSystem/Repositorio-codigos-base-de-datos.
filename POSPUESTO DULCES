-- sentencias ejecutadas como superusuario para crear el usuario requerido
-- y asignar los privilegios y cuotas necesarias
-- formato inicialprimernombreapellido contraseña cualquiera
-- quota ilimitada en los tablespaces users o data dependiendo del caso
-- privilegios de sistema para crear sesion, tablas y secuencias 
-- Ejemplo: Alumno Manuel Astorga


CREATE USER mastorga IDENTIFIED BY duoc
QUOTA UNLIMITED ON USERS;
GRANT CREATE SESSION TO mastorga;
GRANT CREATE TABLE TO mastorga;
GRANT CREATE SEQUENCE TO mastorga;

-- sentencias para crear la base en el esquema de usuario creado
DROP TABLE detalleboleta CASCADE CONSTRAINTS;
DROP TABLE boleta CASCADE CONSTRAINTS;
DROP TABLE producto CASCADE CONSTRAINTS;
DROP TABLE empleado CASCADE CONSTRAINTS;
DROP TABLE cliente CASCADE CONSTRAINTS;
DROP TABLE equipo CASCADE CONSTRAINTS;
DROP TABLE categorizacion CASCADE CONSTRAINTS;
DROP TABLE comuna CASCADE CONSTRAINTS;
DROP TABLE fabrica CASCADE CONSTRAINTS;
DROP SEQUENCE seq_boleta;


CREATE SEQUENCE seq_boleta START WITH 1010 INCREMENT BY 10;
--------------------------------------------------------
--  DDL for Table fabrica
--------------------------------------------------------
CREATE TABLE fabrica (
  id_fabrica NUMBER(4) GENERATED BY DEFAULT ON NULL AS IDENTITY
                      START WITH 5 INCREMENT BY 5 NOT NULL,  
  nom_fabrica VARCHAR2(60) NOT NULL,
  CONSTRAINT pk_fabrica PRIMARY KEY (id_fabrica)
);

--------------------------------------------------------
--  DDL for Table comuna
--------------------------------------------------------
CREATE TABLE comuna (
  id_comuna NUMBER(3) GENERATED BY DEFAULT ON NULL AS IDENTITY
                      START WITH 100 INCREMENT BY 2 NOT NULL,  
  nom_comuna VARCHAR2(60) NOT NULL,
  CONSTRAINT pk_comuna PRIMARY KEY (id_comuna)
);

--------------------------------------------------------
--  DDL for Table equipo
--------------------------------------------------------
CREATE TABLE equipo (
  id_equipo VARCHAR2(1) NOT NULL, 
  nom_equipo VARCHAR2(10) NOT NULL,
  porc NUMBER(5,2) NOT NULL,
  CONSTRAINT pk_equipo PRIMARY KEY (id_equipo)
);

--------------------------------------------------------
--  DDL for Table categorizacion
--------------------------------------------------------
CREATE TABLE categorizacion (
  id_categorizacion CHAR(1) NOT NULL, 
  nom_categorizacion VARCHAR2(10) NOT NULL , 
  porcentaje NUMBER NOT NULL,
  CONSTRAINT pk_categorizacion PRIMARY KEY (id_categorizacion)
);

--------------------------------------------------------
--  DDL for Table CLIENTE
--------------------------------------------------------
  CREATE TABLE cliente (
    id_cliente NUMBER NOT NULL, 
    nombre_cliente VARCHAR2(35) NOT NULL, 
    direccion VARCHAR2(50) NOT NULL, 
    telefono VARCHAR2(15) NOT NULL,
    id_comuna NUMBER(3) NOT NULL,
    CONSTRAINT pk_cliente PRIMARY KEY (id_cliente)
) ;

--------------------------------------------------------
--  DDL for Table producto
--------------------------------------------------------

  CREATE TABLE producto (
    id_producto NUMBER NOT NULL, 
    nom_producto VARCHAR2(25) NOT NULL, 
    precio NUMBER NOT NULL, 
    stock_actual NUMBER(4) NOT NULL,
    stock_minimo NUMBER(4) NOT NULL,
      CONSTRAINT chk_stock CHECK (stock_actual > stock_minimo),
    id_fabrica NUMBER(4) NOT NULL,
    CONSTRAINT pk_producto PRIMARY KEY (id_producto)
) ;
--------------------------------------------------------
--  DDL for Table empleado
--------------------------------------------------------

CREATE TABLE empleado (
  id_empleado NUMBER(6) NOT NULL, 
  rut_empleado VARCHAR2(10) NOT NULL, 
  nombres VARCHAR2(25) NOT NULL, 
  paterno VARCHAR2(15) NOT NULL, 
  materno VARCHAR2(15),  
  fecnac DATE NOT NULL, 
  feccontrato DATE NOT NULL, 
  sueldo NUMBER NOT NULL,
  comision NUMBER NOT NULL,
  id_equipo VARCHAR2(1), 
  id_categorizacion CHAR(1) NOT NULL,
  CONSTRAINT pk_empleado PRIMARY KEY (id_empleado),
  CONSTRAINT ak_empleado UNIQUE (rut_empleado),
  CONSTRAINT chk_comision CHECK (comision BETWEEN 0.12 AND 0.25)
);

--------------------------------------------------------
--  DDL for Table boleta
--------------------------------------------------------

  CREATE TABLE boleta (
    id_boleta NUMBER NOT NULL, 
    id_cliente NUMBER NOT NULL, 
    id_empleado NUMBER NOT NULL, 
    fecha_boleta DATE DEFAULT SYSDATE NOT NULL,
    CONSTRAINT pk_boleta PRIMARY KEY (id_boleta)
) ;

--------------------------------------------------------
--  DDL for Table detalleboleta
--------------------------------------------------------
  CREATE TABLE detalleboleta (
    id_boleta NUMBER NOT NULL,
    id_producto NUMBER NOT NULL, 
    cantidad NUMBER NOT NULL,
    CONSTRAINT pk_detalleboleta PRIMARY KEY (id_boleta, id_producto)
) ;

ALTER TABLE producto
     ADD CONSTRAINT fk_producto_fabrica FOREIGN KEY (id_fabrica)
     REFERENCES fabrica (id_fabrica);

ALTER TABLE cliente
     ADD CONSTRAINT fk_cliente_comuna FOREIGN KEY (id_comuna)
     REFERENCES comuna (id_comuna);

ALTER TABLE boleta 
	 ADD CONSTRAINT fk_cliente FOREIGN KEY (id_cliente)
	  REFERENCES cliente (id_cliente);

ALTER TABLE boleta 
	 ADD CONSTRAINT fk_empleado FOREIGN KEY (id_empleado)
	  REFERENCES empleado(id_empleado);

ALTER TABLE empleado 
  ADD CONSTRAINT fk_equipo_empleado FOREIGN KEY (id_equipo) 
   REFERENCES equipo (id_equipo);
  
ALTER TABLE empleado 
  ADD CONSTRAINT fk_empleado_categorizacion FOREIGN KEY (id_categorizacion) 
   REFERENCES categorizacion (id_categorizacion);

ALTER TABLE detalleboleta 
	ADD CONSTRAINT fk_detboleta_boleta FOREIGN KEY (id_boleta)
	  REFERENCES boleta (id_boleta) on delete cascade;

ALTER TABLE detalleboleta 
	ADD CONSTRAINT fk_detboleta_producto FOREIGN KEY (id_producto)
	  REFERENCES producto (id_producto);

-- sentencias para poblar la base con los datos propuestos
INSERT INTO fabrica VALUES (NULL, 'Costa');
INSERT INTO fabrica VALUES (NULL, 'Ambrosoli');
INSERT INTO fabrica VALUES (NULL, 'Nestlé');
INSERT INTO fabrica VALUES (NULL, 'Dos en Uno');
INSERT INTO fabrica VALUES (NULL, 'Arcor');

INSERT INTO comuna VALUES (NULL, 'Providencia');
INSERT INTO comuna VALUES (NULL, 'Santiago');
INSERT INTO comuna VALUES (NULL, 'Ñuñoa');
INSERT INTO comuna VALUES (NULL, 'La Florida');
INSERT INTO comuna VALUES (NULL, 'Maipú');
INSERT INTO comuna VALUES (NULL, 'Lo Barnechea');
INSERT INTO comuna VALUES (NULL, 'Macul');
INSERT INTO comuna VALUES (NULL, 'San Miguel');
INSERT INTO comuna VALUES (NULL, 'Recoleta');

INSERT INTO equipo VALUES ('A','Equipo A',8.56);
INSERT INTO equipo VALUES ('B','Equipo B',10.48);
INSERT INTO equipo VALUES ('C','Equipo C',11.27);
INSERT INTO equipo VALUES ('D','Equipo D',7.24);

INSERT INTO categorizacion VALUES ('A','LISTA A', 17.5);
INSERT INTO categorizacion VALUES ('B','LISTA B', 12.6);
INSERT INTO categorizacion VALUES ('C','LISTA C', 9.4);
INSERT INTO categorizacion VALUES ('D','LISTA D', 7.2);
INSERT INTO categorizacion VALUES ('E','LISTA E', 5.4);

INSERT INTO cliente VALUES (1,'ALCARAZ NOVOA MONTSERRAT','RUBEN BARRALES 1630','564522114', 102);
INSERT INTO cliente VALUES (2,'JIMÉNEZ LORCA ELENA','AV. BUSTAMANTE 529 DPTO. K','566665443', 100);
INSERT INTO cliente VALUES (3,'TORRES ROCA MARÍA','DONATELLO 7421','565626134', 104);
INSERT INTO cliente VALUES (4,'LOPEZ ROJAS THOMAS','LORCA 2007','562989233', 108);

INSERT INTO producto VALUES (1,'BARRITAS',250,150,110, 5);
INSERT INTO producto VALUES (2,'LECHEROS',325,50,30, 5);
INSERT INTO producto VALUES (3,'ROSENDOS',100,200, 50, 10);
INSERT INTO producto VALUES (4,'ZIG ZAGS',375,50, 20, 15);
INSERT INTO producto VALUES (5,'PECADOS',400,80,20,20);

INSERT INTO empleado VALUES (1,'11111112-6','MARY','CULVERT','RIVERA','22051963','16041985',350000,0.25,'A','C');
INSERT INTO empleado VALUES (2,'12222222-3','JEROME','WOODS',NULL,'07081978','02072000',345000,0.17,'B','B');
INSERT INTO empleado VALUES (3,'13333333-K','NORA','BROMSLER','OGAZ','09101979','03092001',367400,0.25,'A','A');
INSERT INTO empleado VALUES (4,'14444444-5','FREDERICK','MALLON','PAREDES','08121977','03111999',373620,0.12,'C','C');
INSERT INTO empleado VALUES (5,'15555555-6','PAZ','GUERRA',NULL,'08121988','03112015',373620,0.21,NULL,'C');

INSERT INTO boleta (id_boleta,id_cliente,id_empleado) VALUES (seq_boleta.NEXTVAL,1,2);
INSERT INTO boleta (id_boleta,id_cliente,id_empleado) VALUES (seq_boleta.NEXTVAL,2,4);
INSERT INTO boleta (id_boleta,id_cliente,id_empleado) VALUES (seq_boleta.NEXTVAL,4,3);
INSERT INTO boleta (id_boleta,id_cliente,id_empleado) VALUES (seq_boleta.NEXTVAL,3,5);
INSERT INTO boleta (id_boleta,id_cliente,id_empleado) VALUES (seq_boleta.NEXTVAL,2,2);

INSERT INTO detalleboleta VALUES (1010,1,10);
INSERT INTO detalleboleta VALUES (1010,5,33);
INSERT INTO detalleboleta VALUES (1020,3,88);
INSERT INTO detalleboleta VALUES (1020,4,33);
INSERT INTO detalleboleta VALUES (1020,1,90);
INSERT INTO detalleboleta VALUES (1030,4,200);
INSERT INTO detalleboleta VALUES (1030,2,500);
INSERT INTO detalleboleta VALUES (1040,5,500);
INSERT INTO detalleboleta VALUES (1040,2,250);
INSERT INTO detalleboleta VALUES (1040,3,300);
INSERT INTO detalleboleta VALUES (1050,4,196);
INSERT INTO detalleboleta VALUES (1050,5,128);
INSERT INTO detalleboleta VALUES (1050,2,181);
COMMIT;


-- sentencias para desnormalizacion del modelo
DROP TABLE ventas_mensuales;
CREATE TABLE ventas_mensuales (
  id_empleado NUMBER(6) NOT NULL,
  mes_anno_ventas VARCHAR2(6) NOT NULL,
  nro_ventas NUMBER(4) NOT NULL,
  total_ventas NUMBER(8) NOT NULL,
  CONSTRAINT pk_ventas_mes_empleado PRIMARY KEY (id_empleado, mes_anno_ventas),
  CONSTRAINT fk_ventas_mensuales_empleado FOREIGN KEY (id_empleado) REFERENCES empleado (id_empleado)
);
