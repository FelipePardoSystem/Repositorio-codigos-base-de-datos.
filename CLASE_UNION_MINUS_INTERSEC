CREATE TABLE  TRABAJADORES_A
AS SELECT FIRST_NAME FROM EMPLOYEES
WHERE FIRST_NAME LIKE'A%';

CREATE TABLE  TRABAJADORES_B
AS SELECT FIRST_NAME FROM EMPLOYEES
WHERE FIRST_NAME LIKE'%a';

SELECT 'Comienzan con A' as tipo,
        COUNT(*) AS Cantidad  FROM TRABAJADORES_A;

SELECT 'Terminan con A' as tipo,
        COUNT (*) AS Cantidad FROM TRABAJADORES_B;

DROP TABLE TRABAJADORES_A;

DROP TABLE TRABAJADORES_B;

SELECT first_name as Nombre,
count(*) as cantidad
from TRABAJADORES_B
group by first_name;

SELECT * FROM TRABAJADORES_A;
SELECT * FROM TRABAJADORES_B;

SELECT * FROM TRABAJADORES_A  --10 / 8 DISTINTOS Y 2 IGUALES
intersect
SELECT* FROM TRABAJADORES_B;  --16 / 14 DISTINTISO Y 2 IGUALES

SELECT * FROM TRABAJADORES_A A
 INNER JOIN    TRABAJADORES_B B 
 on A.first_name = B.first_name;

SELECT * FROM TRABAJADORES_A natural join TRABAJADORES_B ;

SELECT * FROM TRABAJADORES_A 
UNION -- SE ENCARA DE ELIMINAR AQUELLOS DUPLICADOS
SELECT * FROM TRABAJADORES_B;

SELECT * FROM TRABAJADORES_A 
UNION ALL -- SE ENCARA DE NO ELIMINAR AQUELLOS DUPLICADOS
SELECT * FROM TRABAJADORES_B;

SELECT * FROM TRABAJADORES_A 
UNION ALL -- SE ENCARA DE NO ELIMINAR AQUELLOS DUPLICADOS
SELECT * FROM TRABAJADORES_B
WHERE first_name not in(SELECT DISTINCT FIRST_NAME FROM TRABAJADORES_A);
--UNION NOS AYUDAR√Å A JUNTA DATOS DE TABLAS DIFERENTES , A DIFERENCIA DEL JOIN ,ESTE NOS DEJA LLAMAR DATOS SIN QUE TENGAN CORRELACION ENTRE AMBOS.

SELECT * FROM TRABAJADORES_A
MINUS 
SELECT * FROM TRABAJADORES_B;
